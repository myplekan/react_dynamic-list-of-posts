{"version":3,"sources":["components/PostsList.tsx","components/Loader/Loader.tsx","utils/fetchClient.ts","components/NewCommentForm.tsx","api/api.ts","components/PostDetails.tsx","components/UserSelector.tsx","App.tsx","index.tsx"],"names":["PostsList","posts","getComments","setOpenSidebar","openSidebar","setEnableForm","useState","sidebarId","setSidebarId","className","map","post","id","title","type","classNames","onClick","handleButtonClick","Loader","BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","body","JSON","stringify","headers","then","fetch","response","json","client","NewCommentForm","postId","setComments","name","setName","email","setEmail","setBody","nameError","setNameError","emailError","setEmailError","bodyError","setBodyError","isLoadingSubmit","setIsLoadingSubmit","isValidEmail","emailValue","test","onSubmit","event","preventDefault","trim","newComment","apiService","commentCreate","curComments","finally","htmlFor","placeholder","value","onChange","target","PostDetails","comments","isLoading","commentError","enableForm","length","href","filter","comment","handleDeleteComment","UserSelector","users","getPosts","activeMenu","setActieMenu","selectName","setSelectName","isActive","setIsActive","role","user","handleUserClick","App","setUsers","setPosts","setPost","setIsLoading","isLoadingComments","setIsLoadingComments","postError","setPostError","setCommentError","useEffect","userId","catch","postValue","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e789ed5a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { Post } from '../types/Post';\n\ntype Props = {\n  posts: Post[]\n  getComments: (postValue: Post) => void\n  openSidebar: boolean\n  setOpenSidebar: React.Dispatch<React.SetStateAction<boolean>>\n  setEnableForm: React.Dispatch<React.SetStateAction<boolean>>\n};\n\nexport const PostsList: React.FC<Props> = ({\n  posts,\n  getComments,\n  setOpenSidebar,\n  openSidebar,\n  setEnableForm,\n}) => {\n  const [sidebarId, setSidebarId] = useState(0);\n\n  const handleButtonClick = (post: Post) => {\n    if (openSidebar && post.id === sidebarId) {\n      setOpenSidebar(false);\n      setSidebarId(0);\n\n      return;\n    }\n\n    setEnableForm(false);\n    getComments(post);\n    setOpenSidebar(true);\n    setSidebarId(post.id);\n  };\n\n  return (\n    <div data-cy=\"PostsList\">\n      <p className=\"title\">Posts:</p>\n\n      <table className=\"table is-fullwidth is-striped is-hoverable is-narrow\">\n        <thead>\n          <tr className=\"has-background-link-light\">\n            <th>#</th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {posts.map(post => (\n            <tr data-cy=\"Post\" key={post.id}>\n              <td data-cy=\"PostId\">{post.id}</td>\n\n              <td data-cy=\"PostTitle\">\n                {post.title}\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  type=\"button\"\n                  data-cy=\"PostButton\"\n                  className={classNames('button is-link',\n                    { 'is-light': sidebarId !== post.id })}\n                  onClick={() => handleButtonClick(post)}\n                >\n                  {sidebarId === post.id ? 'Close' : 'Open'}\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nconst BASE_URL = 'https://mate.academy/students-api';\n\n// a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // for a demo purpose we emulate a delay to see if Loaders work\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => response.json());\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { Comment } from '../types/Comment';\nimport * as apiService from '../api/api';\n\ntype Props = {\n  postId: number\n  setComments: React.Dispatch<React.SetStateAction<Comment[]>>\n};\n\nexport const NewCommentForm: React.FC<Props> = ({ postId, setComments }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const [nameError, setNameError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [bodyError, setBodyError] = useState(false);\n\n  const [isLoadingSubmit, setIsLoadingSubmit] = useState(false);\n\n  const isValidEmail = (emailValue: string) => {\n    const emailRegex = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/;\n\n    return emailRegex.test(emailValue);\n  };\n\n  const reset = () => {\n    setName('');\n    setEmail('');\n    setBody('');\n    setNameError(false);\n    setEmailError(false);\n    setBodyError(false);\n  };\n\n  const handleName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value);\n    setNameError(false);\n  };\n\n  const handleEmail = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setEmail(event.target.value);\n    setEmailError(false);\n  };\n\n  const handleBody = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setBody(event.target.value);\n    setBodyError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setNameError(!name.trim());\n    setEmailError(!isValidEmail(email));\n    setBodyError(!body.trim());\n\n    if (!name || !isValidEmail(email) || !body) {\n      return;\n    }\n\n    const newComment = {\n      id: 0,\n      name,\n      email,\n      body,\n      postId,\n    };\n\n    setIsLoadingSubmit(true);\n\n    apiService.createComment(newComment)\n      .then(commentCreate => {\n        setComments(curComments => [...curComments, commentCreate as Comment]);\n      })\n      .finally(() => setIsLoadingSubmit(false));\n\n    setBody('');\n  };\n\n  return (\n    <form\n      data-cy=\"NewCommentForm\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\" data-cy=\"NameField\">\n        <label className=\"label\" htmlFor=\"comment-author-name\">\n          Author Name\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"comment-author-name\"\n            placeholder=\"Name Surname\"\n            className={classNames('input', { 'is-danger': nameError })}\n            value={name}\n            onChange={handleName}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-user\" />\n          </span>\n\n          {nameError && (\n            <span\n              className=\"icon is-small is-right has-text-danger\"\n              data-cy=\"ErrorIcon\"\n            >\n              <i className=\"fas fa-exclamation-triangle\" />\n            </span>\n          )}\n        </div>\n\n        {nameError && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Name is required\n          </p>\n        )}\n      </div>\n\n      <div className=\"field\" data-cy=\"EmailField\">\n        <label className=\"label\" htmlFor=\"comment-author-email\">\n          Author Email\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"email\"\n            id=\"comment-author-email\"\n            placeholder=\"email@test.com\"\n            className={classNames('input', { 'is-danger': emailError })}\n            value={email}\n            onChange={handleEmail}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-envelope\" />\n          </span>\n\n          {emailError && (\n            <span\n              className=\"icon is-small is-right has-text-danger\"\n              data-cy=\"ErrorIcon\"\n            >\n              <i className=\"fas fa-exclamation-triangle\" />\n            </span>\n          )}\n        </div>\n\n        {emailError && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Email is required\n          </p>\n        )}\n      </div>\n\n      <div className=\"field\" data-cy=\"BodyField\">\n        <label className=\"label\" htmlFor=\"comment-body\">\n          Comment Text\n        </label>\n\n        <div className=\"control\">\n          <textarea\n            id=\"comment-body\"\n            name=\"body\"\n            placeholder=\"Type comment here\"\n            className={classNames('textarea', { 'is-danger': bodyError })}\n            value={body}\n            onChange={handleBody}\n          />\n        </div>\n\n        {bodyError && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Enter some text\n          </p>\n        )}\n      </div>\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            className={classNames('button is-link',\n              { 'is-loading': isLoadingSubmit })}\n          >\n            Add\n          </button>\n        </div>\n\n        <div className=\"control\">\n          {/* eslint-disable-next-line react/button-has-type */}\n          <button\n            type=\"reset\"\n            className=\"button is-link is-light\"\n            onClick={() => reset()}\n          >\n            Clear\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { Comment } from '../types/Comment';\nimport { Post } from '../types/Post';\nimport { User } from '../types/User';\nimport { client } from '../utils/fetchClient';\n\nexport const getUsers = () => {\n  return client.get<User[]>('/users');\n};\n\nexport const getPosts = (userId: number) => {\n  return client.get<Post[]>(`/posts?userId=${userId}`);\n};\n\nexport const getComments = (id: number) => {\n  return client.get<Comment[]>(`/comments?postId=${id}`);\n};\n\nexport const createComment = ({\n  name, email, body, postId,\n}: Omit<Comment, 'id'>) => {\n  return client.post('/comments', {\n    name, email, body, postId,\n  });\n};\n\nexport const deleteComment = (id: number) => {\n  return client.delete(`/comments/${id}`);\n};\n","import React from 'react';\nimport { Loader } from './Loader';\nimport { NewCommentForm } from './NewCommentForm';\nimport { Post } from '../types/Post';\nimport { Comment } from '../types/Comment';\n\ntype Props = {\n  setComments: React.Dispatch<React.SetStateAction<Comment[]>>\n  enableForm: boolean\n  commentError: boolean\n  isLoading: boolean\n  post: Post\n  comments: Comment[]\n  setEnableForm: React.Dispatch<React.SetStateAction<boolean>>\n};\n\nexport const PostDetails: React.FC<Props> = ({\n  post,\n  comments,\n  isLoading,\n  commentError,\n  setEnableForm,\n  enableForm,\n  setComments,\n}) => {\n  const handleDeleteComment = (id: number) => {\n    setComments(curComments => curComments\n      .filter(comment => comment.id !== id));\n  };\n\n  return (\n    <div className=\"content\" data-cy=\"PostDetails\">\n      <div className=\"content\" data-cy=\"PostDetails\">\n        <div className=\"block\">\n          <h2 data-cy=\"PostTitle\">\n            {`#${post?.id}: ${post?.title}`}\n          </h2>\n\n          <p data-cy=\"PostBody\">\n            {post?.body}\n          </p>\n        </div>\n\n        <div className=\"block\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {commentError && (\n            <div className=\"notification is-danger\" data-cy=\"CommentsError\">\n              Something went wrong\n            </div>\n          )}\n\n          {comments.length === 0 && !isLoading && (\n            <p className=\"title is-4\" data-cy=\"NoCommentsMessage\">\n              No comments yet\n            </p>\n          )}\n\n          {comments.length > 0 && !isLoading && (\n            <>\n              <p className=\"title is-4\">Comments:</p>\n\n              {comments.map(({\n                email, name, body, id,\n              }) => (\n                <article\n                  className=\"message is-small\"\n                  data-cy=\"Comment\"\n                  key={id}\n                >\n                  <div className=\"message-header\">\n                    <a href={`mailto:${email}`} data-cy=\"CommentAuthor\">\n                      {name}\n                    </a>\n                    <button\n                      data-cy=\"CommentDelete\"\n                      type=\"button\"\n                      className=\"delete is-small\"\n                      aria-label=\"delete\"\n                      onClick={() => handleDeleteComment(id)}\n                    >\n                      delete button\n                    </button>\n                  </div>\n\n                  <div className=\"message-body\" data-cy=\"CommentBody\">\n                    {body}\n                  </div>\n                </article>\n              ))}\n            </>\n          )}\n\n          {!isLoading && !enableForm && (\n            <button\n              data-cy=\"WriteCommentButton\"\n              type=\"button\"\n              className=\"button is-link\"\n              onClick={() => setEnableForm(true)}\n            >\n              Write a comment\n            </button>\n          )}\n        </div>\n\n        {enableForm && (\n          <NewCommentForm\n            setComments={setComments}\n            postId={post.id}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { User } from '../types/User';\n\ntype Props = {\n  users: User[]\n  getPosts: (userId: number) => void\n};\n\nexport const UserSelector: React.FC<Props> = ({\n  users,\n  getPosts,\n}) => {\n  const [activeMenu, setActieMenu] = useState(false);\n  const [selectName, setSelectName] = useState('');\n  const [isActive, setIsActive] = useState<number | null>(null);\n\n  const handleUserClick = (user: User) => {\n    setActieMenu(!activeMenu);\n    setSelectName(user.name);\n    setIsActive(user.id);\n    getPosts(user.id);\n  };\n\n  return (\n    <div\n      data-cy=\"UserSelector\"\n      className={classNames('dropdown', { 'is-active': activeMenu })}\n    >\n      <div className=\"dropdown-trigger\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu\"\n          onClick={() => setActieMenu(!activeMenu)}\n        >\n          <span>\n            {selectName || 'Choose a user'}\n          </span>\n\n          <span className=\"icon is-small\">\n            <i className=\"fas fa-angle-down\" aria-hidden=\"true\" />\n          </span>\n        </button>\n      </div>\n\n      {activeMenu && (\n        <div className=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n          <div className=\"dropdown-content\">\n            {users.map(user => (\n              <a\n                key={user.id}\n                href={`#user-${user.id}`}\n                className={classNames('dropdown-item', {\n                  'is-active': isActive === user.id,\n                })}\n                onClick={() => handleUserClick(user)}\n              >\n                {user.name}\n              </a>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/bulma.sass';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport classNames from 'classnames';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { UserSelector } from './components/UserSelector';\nimport { Loader } from './components/Loader';\nimport * as apiService from './api/api';\nimport { User } from './types/User';\nimport { Post } from './types/Post';\nimport { Comment } from './types/Comment';\n\nexport const App: React.FC = () => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [posts, setPosts] = useState<Post[] | null>(null);\n  const [post, setPost] = useState<Post | null>(null);\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoadingComments, setIsLoadingComments] = useState(false);\n  const [postError, setPostError] = useState(false);\n  const [commentError, setCommentError] = useState(false);\n  const [openSidebar, setOpenSidebar] = useState(false);\n  const [enableForm, setEnableForm] = useState(false);\n\n  useEffect(() => {\n    apiService.getUsers().then(setUsers);\n  }, []);\n\n  const getPosts = (userId: number) => {\n    if (postError) {\n      setPostError(false);\n    }\n\n    setIsLoading(true);\n    apiService.getPosts(userId)\n      .then(setPosts)\n      .catch(() => setPostError(true))\n      .finally(() => setIsLoading(false));\n  };\n\n  const getComments = (postValue: Post) => {\n    setCommentError(false);\n    setPost(postValue);\n    setIsLoadingComments(true);\n    apiService.getComments(postValue.id)\n      .then(setComments)\n      .catch(() => setCommentError(true))\n      .finally(() => setIsLoadingComments(false));\n  };\n\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <div className=\"tile is-ancestor\">\n          <div className=\"tile is-parent\">\n            <div className=\"tile is-child box is-success\">\n              <div className=\"block\">\n                <UserSelector\n                  users={users}\n                  getPosts={getPosts}\n                />\n              </div>\n\n              <div className=\"block\" data-cy=\"MainContent\">\n                {!posts && (\n                  <p data-cy=\"NoSelectedUser\">\n                    No user selected\n                  </p>\n                )}\n\n                {isLoading && (\n                  <Loader />\n                )}\n\n                {postError && (\n                  <div\n                    className=\"notification is-danger\"\n                    data-cy=\"PostsLoadingError\"\n                  >\n                    Something went wrong!\n                  </div>\n                )}\n\n                {posts?.length === 0 && (\n                  <div className=\"notification is-warning\" data-cy=\"NoPostsYet\">\n                    No posts yet\n                  </div>\n                )}\n\n                {posts && (\n                  <PostsList\n                    setEnableForm={setEnableForm}\n                    posts={posts}\n                    getComments={getComments}\n                    openSidebar={openSidebar}\n                    setOpenSidebar={setOpenSidebar}\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div\n            data-cy=\"Sidebar\"\n            className={classNames(\n              'tile',\n              'is-parent',\n              'is-8-desktop',\n              'Sidebar',\n              { 'Sidebar--open': openSidebar },\n            )}\n          >\n            <div className=\"tile is-child box is-success \">\n              {openSidebar && post && (\n                <PostDetails\n                  setComments={setComments}\n                  enableForm={enableForm}\n                  setEnableForm={setEnableForm}\n                  commentError={commentError}\n                  isLoading={isLoadingComments}\n                  post={post}\n                  comments={comments}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}